# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"This is the interface implemented by all addresses."
interface AddressInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "First line of the address"
    addressLine1: String
    "Second line of the address"
    addressLine2: String
    "Administrative area."
    administrativeArea: String
    "Whether the element is archived or not."
    archived: Boolean
    "Two-letter country code"
    countryCode: String!
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Dependent locality"
    dependentLocality: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The first name on the address."
    firstName: String
    "The full name on the address."
    fullName: String
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The last name on the address."
    lastName: String
    "Latitude"
    latitude: String
    "Locality"
    locality: String
    "Longitude"
    longitude: String
    "Organization name"
    organization: String
    "Organization tax ID"
    organizationTaxId: String
    "Postal code"
    postalCode: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Sorting code"
    sortingCode: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all assets."
interface AssetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Alternative text for the asset."
    alt: String
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String!
    "The filename of the asset file."
    filename: String!
    "The focal point represented as an array with `x` and `y` keys, or null if it’s not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int!
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean!
    "The height in pixels or null if it’s not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "[_Deprecated_] This argument is deprecated and has no effect."
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The ID of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String!
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset’s path in the volume."
    path: String!
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "Returns a `srcset` attribute value based on the given widths or x-descriptors."
    srcset(
        "A list of size descriptors. If you pass x-descriptors, it will be assumed that the image’s current width is the intended 1x width."
        sizes: [String!]!
    ): String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "[_Deprecated_] This argument is deprecated and has no effect."
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it’s not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "[_Deprecated_] This argument is deprecated and has no effect."
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

"This is the interface implemented by all categories."
interface CategoryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The category’s children."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface!]!
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the group that contains the category."
    groupHandle: String!
    "The ID of the group that contains the category."
    groupId: Int!
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The category’s parent."
    parent(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"This is the interface implemented by all elements."
interface ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all entries."
interface EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Whether the element is archived or not."
    archived: Boolean
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The creator of a given draft."
    draftCreator: UserInterface
    "The draft ID (from the `drafts` table)."
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The ID of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revision ID (from the `revisions` table)."
    revisionId: Int
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The handle of the section that contains the entry."
    sectionHandle: String!
    "The ID of the section that contains the entry."
    sectionId: Int!
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String!
    "The ID of the entry type that contains the entry."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"This is the interface implemented by all matrix blocks."
interface MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int!
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the primary owner of the Matrix block."
    primaryOwnerId: Int!
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block’s type."
    typeHandle: String!
    "The ID of the matrix block’s type."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all products."
interface ProductInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "If the product is available for purchase."
    availableForPurchase: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The price of the default variant for the product."
    defaultPrice: Float
    "The formatted price of the default variant for the product."
    defaultPriceAsCurrency: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The handle of the product type that contains the product."
    productTypeHandle: String
    "The ID of the product type that contains the product."
    productTypeId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The product’s full URL"
    url: String
    "The product’s variants."
    variants: [VariantInterface]
}

"This is the interface implemented by SEOmatic."
interface SeomaticInterface {
    "The FrontendTemplateContainer SEOmatic container."
    frontendTemplateContainer: String @deprecated(reason : "This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.")
    frontendTemplates(
        "The site handle to fetch frontend containers for."
        site: String,
        "The site ID to fetch frontend containers for."
        siteId: Int,
        "The frontend container type."
        type: SeomaticFrontendTemplate
    ): [FileContents]
    "The MetaJsonLdContainer SEOmatic container."
    metaJsonLdContainer: String
    "The MetaLinkContainer SEOmatic container."
    metaLinkContainer: String
    "The MetaScriptContainer SEOmatic container."
    metaScriptContainer: String
    "The MetaSiteVarsContainer SEOmatic container."
    metaSiteVarsContainer: String
    "The MetaTagContainer SEOmatic container."
    metaTagContainer: String
    "The MetaTitleContainer SEOmatic container."
    metaTitleContainer: String
    sitemapIndexes(
        "Optional - The site handle to resolve the sitemap for."
        site: String,
        "Optional - The site ID to resolve the sitemap for."
        siteId: Int
    ): [FileContents]
    sitemapStyles: FileContents
    sitemaps(
        "Optional - the sitemap filename."
        filename: String,
        "Optional - The site handle to list the sitemaps for."
        site: String,
        "Optional - The site ID to list the sitemaps for."
        siteId: Int,
        "Optional - The source bundles handle to get the  sitemap for."
        sourceBundleHandle: String,
        "Optional - The source bundle type to get the sitemaps for."
        sourceBundleType: String
    ): [FileContents]
}

"This is the interface implemented by all users."
interface UserInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The user’s addresses."
    addresses(
        "Narrows the query results based on the addresses’ administrative areas."
        administrativeArea: [String],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the addresses’ country codes."
        countryCode: [String],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results based on the addresses’ owners."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [AddressInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The user’s email."
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The user’s first name."
    firstName: String
    "The user’s first name or username."
    friendlyName: String
    "The user’s full name."
    fullName: String
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The user’s last name."
    lastName: String
    "The user’s full name or username."
    name: String!
    "The user’s preferences."
    preferences: String!
    "The user’s preferred language."
    preferredLanguage: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The username."
    username: String
}

"This is the interface implemented by all variants."
interface VariantInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "If the variant has unlimited stock."
    hasUnlimitedStock: Boolean
    "The height of the variant."
    height: Float
    "The ID of the entity"
    id: ID
    "If the variant is available to be purchased."
    isAvailable: Boolean
    "If the variant is the default for the product."
    isDefault: Boolean
    "The language of the site element is associated with."
    language: String
    "The length of the variant."
    length: Float
    "The maximum allowed quantity to be purchased."
    maxQty: Int
    "The minimum allowed quantity to be purchased."
    minQty: Int
    "The price of the variant."
    price: Float
    "The formatted price of the variant."
    priceAsCurrency: String
    "The variant’s parent product."
    product: ProductInterface
    "The ID of the variant’s parent product."
    productId: Int
    "The title of the variant’s parent product."
    productTitle: String
    "The product type ID of the variant’s parent product."
    productTypeId: Int
    "The sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePrice: Float
    "The formatted sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePriceAsCurrency: String
    "The sales that apply to the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    sales: [Sale]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The SKU of the variant."
    sku: String
    "The element’s slug."
    slug: String
    "The sort order of the variant."
    sortOrder: Int
    "The element’s status."
    status: String
    "The stock level of the variant."
    stock: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The weight of the variant."
    weight: Float
    "The width of the variant."
    width: Float
}

union contentBlocks_MatrixField = contentBlocks_button_BlockType | contentBlocks_copy_BlockType | contentBlocks_heading_BlockType | contentBlocks_image_BlockType

union homeSectionEntryUnion = home_home_Entry

union pagesSectionEntryUnion = pages_collection_Entry | pages_general_Entry

union primaryNavigation_MatrixField = primaryNavigation_menuItem_BlockType

union settingsSectionEntryUnion = settings_settings_Entry

type Address implements AddressInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "First line of the address"
    addressLine1: String
    "Second line of the address"
    addressLine2: String
    "Administrative area."
    administrativeArea: String
    "Whether the element is archived or not."
    archived: Boolean
    "Two-letter country code"
    countryCode: String!
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Dependent locality"
    dependentLocality: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The first name on the address."
    firstName: String
    "The full name on the address."
    fullName: String
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The last name on the address."
    lastName: String
    "Latitude"
    latitude: String
    "Locality"
    locality: String
    "Longitude"
    longitude: String
    "Organization name"
    organization: String
    "Organization tax ID"
    organizationTaxId: String
    "Postal code"
    postalCode: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Sorting code"
    sortingCode: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type Element implements ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"Contents of a file"
type FileContents {
    contents: String
    filename: String!
}

type Mutation {
    ping: String
}

type Query {
    "This query is used to query for a single asset."
    asset(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "This query is used to return the number of assets."
    assetCount(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): Int!
    "This query is used to query for assets."
    assets(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "This query is used to query for categories."
    categories(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "This query is used to query for a single category."
    category(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "This query is used to return the number of categories."
    categoryCount(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): Int!
    "This query is used to query for entries."
    entries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "This query is used to query for a single entry."
    entry(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "This query is used to return the number of entries."
    entryCount(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): Int!
    "Entries within the home section."
    homeEntries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [homeSectionEntryUnion]
    "Entries within the pages section."
    pagesEntries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [pagesSectionEntryUnion]
    ping: String
    "This query is used to query for a product."
    product(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): ProductInterface
    "This query is used to return the number of products."
    productCount(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): Int!
    "This query is used to query for products."
    products(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [ProductInterface]
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "Entries within the settings section."
    settingsEntries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [settingsSectionEntryUnion]
    "This query is used to query for a variant."
    variant(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        color: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only variants for certain products."
        hasProduct: ProductInput,
        "Narrows the query results based on whether the variant has sales applied."
        hasSales: Boolean,
        "Narrows the query results based on whether the variant has stock available."
        hasStock: Boolean,
        "Narrows the query results based on the variant’s height dimension."
        height: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        images: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the variants default status."
        isDefault: Boolean,
        "Narrows the query results based on the variant’s length dimension."
        length: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
        maxQty: [QueryArgument],
        "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
        minQty: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on variant price."
        price: [QueryArgument],
        "Narrows the query results based on the variant’s product ID."
        productId: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        size: [QueryArgument],
        "Narrows the query results based on the variant SKU."
        sku: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on variant stock level."
        stock: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the variant’s product’s type ID."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the variant’s weight dimension."
        weight: [QueryArgument],
        "Narrows the query results based on the variant’s width dimension."
        width: [QueryArgument]
    ): VariantInterface
    "This query is used to return the number of variants."
    variantCount(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        color: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only variants for certain products."
        hasProduct: ProductInput,
        "Narrows the query results based on whether the variant has sales applied."
        hasSales: Boolean,
        "Narrows the query results based on whether the variant has stock available."
        hasStock: Boolean,
        "Narrows the query results based on the variant’s height dimension."
        height: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        images: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the variants default status."
        isDefault: Boolean,
        "Narrows the query results based on the variant’s length dimension."
        length: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
        maxQty: [QueryArgument],
        "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
        minQty: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on variant price."
        price: [QueryArgument],
        "Narrows the query results based on the variant’s product ID."
        productId: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        size: [QueryArgument],
        "Narrows the query results based on the variant SKU."
        sku: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on variant stock level."
        stock: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the variant’s product’s type ID."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the variant’s weight dimension."
        weight: [QueryArgument],
        "Narrows the query results based on the variant’s width dimension."
        width: [QueryArgument]
    ): Int!
    "This query is used to query for variants."
    variants(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        color: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only variants for certain products."
        hasProduct: ProductInput,
        "Narrows the query results based on whether the variant has sales applied."
        hasSales: Boolean,
        "Narrows the query results based on whether the variant has stock available."
        hasStock: Boolean,
        "Narrows the query results based on the variant’s height dimension."
        height: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        images: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the variants default status."
        isDefault: Boolean,
        "Narrows the query results based on the variant’s length dimension."
        length: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
        maxQty: [QueryArgument],
        "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
        minQty: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on variant price."
        price: [QueryArgument],
        "Narrows the query results based on the variant’s product ID."
        productId: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        size: [QueryArgument],
        "Narrows the query results based on the variant SKU."
        sku: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on variant stock level."
        stock: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the variant’s product’s type ID."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the variant’s weight dimension."
        weight: [QueryArgument],
        "Narrows the query results based on the variant’s width dimension."
        width: [QueryArgument]
    ): [VariantInterface]
}

type Sale {
    "How the sale should be applied."
    apply: String
    "The amount applied used by the apply option."
    applyAmount: Float
    "The amount applied used by the apply option."
    applyAmountAsFlat: Float
    "The amount applied used by the apply option."
    applyAmountAsPercent: String
    "Start date of the sale."
    dateFrom: DateTime
    "Start date of the sale."
    dateTo: DateTime
    "Description of the sale."
    description: String
    "The name of the sale as described in the control panel."
    name: String
}

"This entity has all the SEOmatic fields"
type SeomaticType implements SeomaticInterface {
    "The FrontendTemplateContainer SEOmatic container."
    frontendTemplateContainer: String @deprecated(reason : "This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.")
    frontendTemplates(
        "The site handle to fetch frontend containers for."
        site: String,
        "The site ID to fetch frontend containers for."
        siteId: Int,
        "The frontend container type."
        type: SeomaticFrontendTemplate
    ): [FileContents]
    "The MetaJsonLdContainer SEOmatic container."
    metaJsonLdContainer: String
    "The MetaLinkContainer SEOmatic container."
    metaLinkContainer: String
    "The MetaScriptContainer SEOmatic container."
    metaScriptContainer: String
    "The MetaSiteVarsContainer SEOmatic container."
    metaSiteVarsContainer: String
    "The MetaTagContainer SEOmatic container."
    metaTagContainer: String
    "The MetaTitleContainer SEOmatic container."
    metaTitleContainer: String
    sitemapIndexes(
        "Optional - The site handle to resolve the sitemap for."
        site: String,
        "Optional - The site ID to resolve the sitemap for."
        siteId: Int
    ): [FileContents]
    sitemapStyles: FileContents
    sitemaps(
        "Optional - the sitemap filename."
        filename: String,
        "Optional - The site handle to list the sitemaps for."
        site: String,
        "Optional - The site ID to list the sitemaps for."
        siteId: Int,
        "Optional - The source bundles handle to get the  sitemap for."
        sourceBundleHandle: String,
        "Optional - The source bundle type to get the sitemaps for."
        sourceBundleType: String
    ): [FileContents]
}

type User implements ElementInterface & UserInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The user’s addresses."
    addresses(
        "Narrows the query results based on the addresses’ administrative areas."
        administrativeArea: [String],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the addresses’ country codes."
        countryCode: [String],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results based on the addresses’ owners."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [AddressInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The user’s email."
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The user’s first name."
    firstName: String
    "The user’s first name or username."
    friendlyName: String
    "The user’s full name."
    fullName: String
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The user’s last name."
    lastName: String
    "The user’s full name or username."
    name: String!
    "The user’s preferences."
    preferences: String!
    "The user’s preferred language."
    preferredLanguage: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The username."
    username: String
}

type catalog_Product implements ElementInterface & ProductInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "If the product is available for purchase."
    availableForPurchase: Boolean
    categories(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]!
    contentBlocks(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on the primary owner element of the Matrix blocks, per the owners’ IDs."
        primaryOwnerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentBlocks_MatrixField]!
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The price of the default variant for the product."
    defaultPrice: Float
    "The formatted price of the default variant for the product."
    defaultPriceAsCurrency: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the entity"
    id: ID
    keywords: String
    "The language of the site element is associated with."
    language: String
    previewImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    previewText: String
    "The handle of the product type that contains the product."
    productTypeHandle: String
    "The ID of the product type that contains the product."
    productTypeId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The product’s full URL"
    url: String
    "The product’s variants."
    variants: [VariantInterface]
}

type catalog_Variant implements ElementInterface & VariantInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    color(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "If the variant has unlimited stock."
    hasUnlimitedStock: Boolean
    "The height of the variant."
    height: Float
    "The ID of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    images(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    "If the variant is available to be purchased."
    isAvailable: Boolean
    "If the variant is the default for the product."
    isDefault: Boolean
    "The language of the site element is associated with."
    language: String
    "The length of the variant."
    length: Float
    "The maximum allowed quantity to be purchased."
    maxQty: Int
    "The minimum allowed quantity to be purchased."
    minQty: Int
    "The price of the variant."
    price: Float
    "The formatted price of the variant."
    priceAsCurrency: String
    "The variant’s parent product."
    product: ProductInterface
    "The ID of the variant’s parent product."
    productId: Int
    "The title of the variant’s parent product."
    productTitle: String
    "The product type ID of the variant’s parent product."
    productTypeId: Int
    "The sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePrice: Float
    "The formatted sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePriceAsCurrency: String
    "The sales that apply to the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    sales: [Sale]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    size(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The SKU of the variant."
    sku: String
    "The element’s slug."
    slug: String
    "The sort order of the variant."
    sortOrder: Int
    "The element’s status."
    status: String
    "The stock level of the variant."
    stock: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The weight of the variant."
    weight: Float
    "The width of the variant."
    width: Float
}

type contentBlocks_button_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    buttonLink: linkField_Link
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int!
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the primary owner of the Matrix block."
    primaryOwnerId: Int!
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block’s type."
    typeHandle: String!
    "The ID of the matrix block’s type."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type contentBlocks_copy_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int!
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the primary owner of the Matrix block."
    primaryOwnerId: Int!
    richText: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block’s type."
    typeHandle: String!
    "The ID of the matrix block’s type."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type contentBlocks_heading_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int!
    heading: String
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the primary owner of the Matrix block."
    primaryOwnerId: Int!
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    size(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block’s type."
    typeHandle: String!
    "The ID of the matrix block’s type."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type contentBlocks_image_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int!
    "The ID of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    "The language of the site element is associated with."
    language: String
    "The ID of the primary owner of the Matrix block."
    primaryOwnerId: Int!
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block’s type."
    typeHandle: String!
    "The ID of the matrix block’s type."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type home_home_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Whether the element is archived or not."
    archived: Boolean
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    contentBlocks(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on the primary owner element of the Matrix blocks, per the owners’ IDs."
        primaryOwnerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentBlocks_MatrixField]!
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The creator of a given draft."
    draftCreator: UserInterface
    "The draft ID (from the `drafts` table)."
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    heading: String
    "The ID of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    previewText: String
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revision ID (from the `revisions` table)."
    revisionId: Int
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The handle of the section that contains the entry."
    sectionHandle: String!
    "The ID of the section that contains the entry."
    sectionId: Int!
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String!
    "The ID of the entry type that contains the entry."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type images_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Alternative text for the asset."
    alt: String
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String!
    "The filename of the asset file."
    filename: String!
    "The focal point represented as an array with `x` and `y` keys, or null if it’s not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int!
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean!
    "The height in pixels or null if it’s not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "[_Deprecated_] This argument is deprecated and has no effect."
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The ID of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String!
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset’s path in the volume."
    path: String!
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "Returns a `srcset` attribute value based on the given widths or x-descriptors."
    srcset(
        "A list of size descriptors. If you pass x-descriptors, it will be assumed that the image’s current width is the intended 1x width."
        sizes: [String!]!
    ): String
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "[_Deprecated_] This argument is deprecated and has no effect."
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it’s not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "[_Deprecated_] This argument is deprecated and has no effect."
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

"This is the interface implemented by all links."
type linkField_Link {
    ariaLabel: String
    customText: String
    element: ElementInterface
    target: String
    text: String
    title: String
    type: String
    url: String
}

type pages_collection_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Whether the element is archived or not."
    archived: Boolean
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    categories(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]!
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The creator of a given draft."
    draftCreator: UserInterface
    "The draft ID (from the `drafts` table)."
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The ID of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    pagination(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    previewText: String
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revision ID (from the `revisions` table)."
    revisionId: Int
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The handle of the section that contains the entry."
    sectionHandle: String!
    "The ID of the section that contains the entry."
    sectionId: Int!
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String!
    "The ID of the entry type that contains the entry."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type pages_general_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Whether the element is archived or not."
    archived: Boolean
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    contentBlocks(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on the primary owner element of the Matrix blocks, per the owners’ IDs."
        primaryOwnerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentBlocks_MatrixField]!
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The creator of a given draft."
    draftCreator: UserInterface
    "The draft ID (from the `drafts` table)."
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The ID of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on whether the assets have alternative text."
        hasAlt: Boolean,
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]!
    previewText: String
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revision ID (from the `revisions` table)."
    revisionId: Int
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The handle of the section that contains the entry."
    sectionHandle: String!
    "The ID of the section that contains the entry."
    sectionId: Int!
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String!
    "The ID of the entry type that contains the entry."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type primaryNavigation_menuItem_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int!
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    navLink: linkField_Link
    "The ID of the primary owner of the Matrix block."
    primaryOwnerId: Int!
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element’s status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block’s type."
    typeHandle: String!
    "The ID of the matrix block’s type."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type productCategories_Category implements CategoryInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The category’s children."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface!]!
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the group that contains the category."
    groupHandle: String!
    "The ID of the group that contains the category."
    groupId: Int!
    "The ID of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The category’s parent."
    parent(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type settings_settings_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Whether the element is archived or not."
    archived: Boolean
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "The creator of a given draft."
    draftCreator: UserInterface
    "The draft ID (from the `drafts` table)."
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The ID of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface!]!
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    primaryNavigation(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on the primary owner element of the Matrix blocks, per the owners’ IDs."
        primaryOwnerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [primaryNavigation_MatrixField]!
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revision ID (from the `revisions` table)."
    revisionId: Int
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        categories: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants in their structure."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        pagination: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewText: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: Int
    "The handle of the section that contains the entry."
    sectionHandle: String!
    "The ID of the section that contains the entry."
    sectionId: Int!
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        environment: SeomaticEnvironment,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element’s status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String!
    "The ID of the entry type that contains the entry."
    typeId: Int!
    "The UID of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"Optional - The SEOmatic environment that should be used"
enum SeomaticEnvironment {
    "Live production environment, with indexing enabled"
    live
    "Local Development environment, with debugging enabled and indexing disabled"
    local
    "Staging environment, with indexing disabled"
    staging
}

enum SeomaticFrontendTemplate {
    "The ads.txt file"
    ads
    "The humans.txt file"
    humans
    "The robots.txt file"
    robots
    "The security.txt file"
    security
}

input AssetCriteriaInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the assets’ files’ last-modified dates."
    dateModified: String
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results based on the assets’ filenames."
    filename: [String]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
    folderId: [QueryArgument]
    "Narrows the query results based on whether the assets have alternative text."
    hasAlt: Boolean
    "Narrows the query results based on the assets’ image heights."
    height: [String]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
    includeSubfolders: Boolean
    "Narrows the query results based on the assets’ file kinds."
    kind: [String]
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the assets’ file sizes (in bytes)."
    size: [String]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
    uploader: QueryArgument
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
    volume: [String]
    "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
    volumeId: [QueryArgument]
    "Narrows the query results based on the assets’ image widths."
    width: [String]
    "A list of transform handles to preload."
    withTransforms: [String]
}

input CategoryCriteriaInput {
    "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
    ancestorDist: Int
    "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
    ancestorOf: Int
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
    descendantDist: Int
    "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
    descendantOf: Int
    "Whether to only return categories that the user has permission to edit."
    editable: Boolean
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the category groups the categories belong to per the group’s handles."
    group: [String]
    "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
    groupId: [QueryArgument]
    "Narrows the query results based on whether the elements have any descendants in their structure."
    hasDescendants: Boolean
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
    leaves: Boolean
    "Narrows the query results based on the elements’ level within the structure."
    level: Int
    "Sets the limit for paginated results."
    limit: Int
    "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
    nextSiblingOf: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
    positionedAfter: Int
    "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
    positionedBefore: Int
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
    prevSiblingOf: Int
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Determines which structure data should be joined into the query."
    structureId: Int
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Explicitly determines whether the query should join in the structure data."
    withStructure: Boolean
}

input EntryCriteriaInput {
    "Narrows the query results to only entries that were posted on or after a certain date."
    after: String
    "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`."
    ancestorDist: Int
    "Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID."
    ancestorOf: Int
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the user group the entries’ authors belong to."
    authorGroup: [String]
    "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
    authorGroupId: [QueryArgument]
    "Narrows the query results based on the entries’ authors."
    authorId: [QueryArgument]
    "Narrows the query results to only entries that were posted before a certain date."
    before: String
    categories: [QueryArgument]
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`."
    descendantDist: Int
    "Narrows the query results to only elements that are descendants of another element in its structure provided by its ID."
    descendantOf: Int
    "The drafts’ creator ID"
    draftCreator: Int
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
    draftOf: QueryArgument
    "Whether draft elements should be returned."
    drafts: Boolean
    "Whether to only return entries that the user has permission to edit."
    editable: Boolean
    "Narrows the query results based on the entries’ expiry dates."
    expiryDate: [String]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on whether the elements have any descendants in their structure."
    hasDescendants: Boolean
    heading: [QueryArgument]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    image: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    keywords: [QueryArgument]
    "Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants)."
    leaves: Boolean
    "Narrows the query results based on the elements’ level within the structure."
    level: Int
    "Sets the limit for paginated results."
    limit: Int
    "Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID."
    nextSiblingOf: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    pagination: [QueryArgument]
    "Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID."
    positionedAfter: Int
    "Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID."
    positionedBefore: Int
    "Narrows the query results based on the entries’ post dates."
    postDate: [String]
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID."
    prevSiblingOf: Int
    previewImage: [QueryArgument]
    previewText: [QueryArgument]
    "Whether provisional drafts should be returned."
    provisionalDrafts: Boolean
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "The revisions’ creator ID"
    revisionCreator: Int
    "The ID of the revision to return (from the `revisions` table)"
    revisionId: Int
    "The source element ID that revisions should be returned for"
    revisionOf: QueryArgument
    "Whether revision elements should be returned."
    revisions: Boolean
    "Narrows the query results to only elements that match a search query."
    search: String
    "Narrows the query results based on the section handles the entries belong to."
    section: [String]
    "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
    sectionId: [QueryArgument]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Determines which structure data should be joined into the query."
    structureId: Int
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the entries’ entry type handles."
    type: [String]
    "Narrows the query results based on the entries’ entry types, per the types’ IDs."
    typeId: [QueryArgument]
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Explicitly determines whether the query should join in the structure data."
    withStructure: Boolean
}

input ProductInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Whether to only return products that are available to purchase."
    availableForPurchase: Boolean
    categories: [QueryArgument]
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results based on the default price on the product."
    defaultPrice: [QueryArgument]
    "The drafts’ creator ID"
    draftCreator: Int
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
    draftOf: QueryArgument
    "Whether draft elements should be returned."
    drafts: Boolean
    "Whether to only return products that the user has permission to edit."
    editable: Boolean
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results to only products that have certain variants."
    hasVariant: VariantInput
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    keywords: [QueryArgument]
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    previewImage: [QueryArgument]
    previewText: [QueryArgument]
    "Whether provisional drafts should be returned."
    provisionalDrafts: Boolean
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "The revisions’ creator ID"
    revisionCreator: Int
    "The ID of the revision to return (from the `revisions` table)"
    revisionId: Int
    "The source element ID that revisions should be returned for"
    revisionOf: QueryArgument
    "Whether revision elements should be returned."
    revisions: Boolean
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the product type the products belong to per the product type’s handles."
    type: [String]
    "Narrows the query results based on the product types the products belong to, per the product type IDs."
    typeId: [QueryArgument]
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
}

input TagCriteriaInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the tag groups the tags belong to per the group’s handles."
    group: [String]
    "Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs."
    groupId: [QueryArgument]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
}

input UserCriteriaInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on whether the users have uploaded any assets."
    assetUploaders: Boolean
    "Narrows the query results based on whether the users are listed as the author of any entries."
    authors: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results based on the users’ email addresses."
    email: [String]
    "Narrows the query results based on the users’ first names."
    firstName: [String]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the users’ full names."
    fullName: [String]
    "Narrows the query results based on the user group the users belong to."
    group: [QueryArgument]
    "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
    groupId: [QueryArgument]
    "Narrows the query results to only users that have (or don’t have) a user photo."
    hasPhoto: Boolean
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Narrows the query results based on the users’ last names."
    lastName: [String]
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Narrows the query results based on the users’ usernames."
    username: [String]
}

input VariantInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    color: [QueryArgument]
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "The drafts’ creator ID"
    draftCreator: Int
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
    draftOf: QueryArgument
    "Whether draft elements should be returned."
    drafts: Boolean
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results to only variants for certain products."
    hasProduct: ProductInput
    "Narrows the query results based on whether the variant has sales applied."
    hasSales: Boolean
    "Narrows the query results based on whether the variant has stock available."
    hasStock: Boolean
    "Narrows the query results based on the variant’s height dimension."
    height: [QueryArgument]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    image: [QueryArgument]
    images: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Narrows the query results based on the variants default status."
    isDefault: Boolean
    "Narrows the query results based on the variant’s length dimension."
    length: [QueryArgument]
    "Sets the limit for paginated results."
    limit: Int
    "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
    maxQty: [QueryArgument]
    "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
    minQty: [QueryArgument]
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on variant price."
    price: [QueryArgument]
    "Narrows the query results based on the variant’s product ID."
    productId: [QueryArgument]
    "Whether provisional drafts should be returned."
    provisionalDrafts: Boolean
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "The revisions’ creator ID"
    revisionCreator: Int
    "The ID of the revision to return (from the `revisions` table)"
    revisionId: Int
    "The source element ID that revisions should be returned for"
    revisionOf: QueryArgument
    "Whether revision elements should be returned."
    revisions: Boolean
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    size: [QueryArgument]
    "Narrows the query results based on the variant SKU."
    sku: [String]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on variant stock level."
    stock: [QueryArgument]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the variant’s product’s type ID."
    typeId: [QueryArgument]
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Narrows the query results based on the variant’s weight dimension."
    weight: [QueryArgument]
    "Narrows the query results based on the variant’s width dimension."
    width: [QueryArgument]
}


"The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value."
scalar QueryArgument

"The `DateTime` scalar type represents a point in time."
scalar DateTime
